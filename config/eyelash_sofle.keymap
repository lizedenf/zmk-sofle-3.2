#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 35    // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    zip_scroll_scaler: zip_scroll_scaler {
        compatible = "zmk,input-processor-scaler";
        #input-processor-cells = <2>;
        type = <INPUT_EV_REL>;
        codes = <INPUT_REL_WHEEL INPUT_REL_HWHEEL>;
        track-remainders;
    };
};

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <0>;      // 0
    time-to-max-speed-ms = <0>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <400>;
    acceleration-exponent = <1>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    behaviors {
    };

    macros {
        emdash: emdash {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N0 &kp N1 &kp N5 &kp N1>;
            label = "EMDASH";
        };

        sectionsym: sectionsym {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N0 &kp N1 &kp N6 &kp N7>;
            label = "SECTIONSYM";
        };

        para_sym: para_sym {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N0 &kp N1 &kp N8 &kp N2>;
            label = "PARA_SYM";
        };

        Plaintiff: plaintiff {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(P) &kp L &kp A &kp I &kp N &kp T &kp I &kp F &kp F>;
            label = "PLAINTIFF";
        };

        Defendant: Defendant {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(D) &kp E &kp F &kp E &kp N &kp D &kp A &kp N &kp T>;
            label = "DEFENDANT";
        };

        copyright: copyright {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp C &kp O &kp P &kp Y &kp R &kp I &kp G &kp H &kp T>;
            label = "COPYRIGHT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESC     &kp N1                  &kp N2        &kp N3        &kp N4            &kp N5         &kp UP_ARROW     &kp N6       &kp N7             &kp N8       &kp N9           &kp N0              &kp BACKSPACE
&kp TAB     &kp Q                   &kp W         &kp E         &kp R             &kp T          &kp DOWN_ARROW   &kp Y        &kp U              &kp I        &kp O            &kp P               &kp BSLH
&kp TILDE   &mt LEFT_GUI A          &mt LALT S    &mt LCTRL D   &mt LEFT_SHIFT F  &kp G          &kp LEFT_ARROW   &kp H        &mt RIGHT_SHIFT J  &mt LCTRL K  &mt RIGHT_ALT L  &mt RGUI SEMICOLON  &kp APOS
&kp LSHFT   &kp Z                   &kp X         &kp C         &kp V             &kp B          &kp RIGHT_ARROW  &kp N        &kp M              &kp COMMA    &kp DOT          &kp FSLH            &kp ENTER
&kp C_MUTE  &mt LEFT_ALT LG(LA(S))  &kp LEFT_GUI  &kp LEFT_ALT  &lt 2 BACKSPACE   &lt 1 SPACE    &kp ENTER        &lt 1 ENTER  &lt 2 DEL          &lt 3 HOME   &kp END          &kp RIGHT_ALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        nav-num-rgb {
            bindings = <
&kp GRAVE   &kp F1           &kp F2          &kp F3           &kp F4           &kp F5             &mmv MOVE_UP     &kp F6      &kp LBKT   &kp RBKT  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans      &emdash          &sectionsym     &para_sym        &Plaintiff       &Defendant         &mmv MOVE_DOWN   &kp PG_UP   &kp N7     &kp N8    &kp N9                &kp PLUS               &kp LS(PLUS)
&trans      &kp LEFT         &kp DOWN        &kp UP_ARROW     &kp RIGHT        &mkp MB5           &mmv MOVE_LEFT   &kp DOLLAR  &kp N4     &kp N5    &kp N6                &kp MINUS              &kp RIGHT_BRACKET
&trans      &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI    &mmv MOVE_RIGHT  &kp FSLH    &kp N1     &kp N2    &kp N3                &kp EQUAL              &trans
&kp C_MUTE  &trans           &trans          &mkp LCLK        &mkp MCLK        &mkp RCLK          &mkp LCLK        &kp DOT     &kp COLON  &kp N0    &trans                &trans
            >;

            display-name = "layer1";
            sensor-bindings = <&inc_dec_kp K_SCROLL_UP K_SCROLL_DOWN>;
        };

        bt-fn-media {
            bindings = <
&kp TILDE  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP      &kp F6  &kp F10  &kp F11  &kp F12  &kp F10      &trans
&trans     &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &mmv MOVE_DOWN    &trans  &kp F7   &kp F8   &kp F9   &kp UNDER    &kp PLUS
&trans     &out OUT_USB  &out OUT_BLE    &trans        &trans        &trans          &kp C_PREV        &trans  &kp F4   &kp F5   &kp F6   &kp LBRC     &kp RBRC
&trans     &sys_reset    &trans          &bootloader   &trans        &trans          &kp C_NEXT        &trans  &kp F1   &kp F2   &kp F3   &bootloader  &trans
&trans     &trans        &trans          &trans        &trans        &trans          &kp C_PLAY_PAUSE  &trans  &trans   &trans   &trans   &trans
            >;

            sensor-bindings = <&inc_dec_kp C_FF C_RW>;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
